#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    
    # https://weakdh.org/sysadmin.html#haproxy
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    60s
    timeout queue           5s
    timeout connect         5s
    timeout client          60s
    timeout server          60s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen admin
    bind *:9443 ssl crt /etc/haproxy/ssl/myplaceonline.com.pem
    stats enable
    stats uri /
    stats realm HAProxy\ Statistics
    stats auth admin:${cubevar_app_passwords_haproxy_stats}
    stats admin if TRUE

listen internaladmin
    bind 127.0.0.1:9444
    stats enable
    stats uri /
    
    # telegraf is constantly getting stats which pollutes the logs
    http-request set-log-level silent

#---------------------------------------------------------------------
# frontends
#---------------------------------------------------------------------
frontend myplaceonline_insecure
    bind *:80
    capture request header User-Agent len 128
    capture request header Referer len 128
    log-format             %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %U\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %{+Q}r\ %hr
    acl letsencrypt-request path_beg -i /.well-known/acme-challenge/
    redirect scheme https if !{ ssl_fc } !{ path_beg /.well-known/acme-challenge/ }
    use_backend letsencrypt if letsencrypt-request
    default_backend             static_backend

frontend myplaceonline
    bind *:443 ssl crt /etc/haproxy/ssl/myplaceonline.com.pem
    capture request header User-Agent len 128
    capture request header Referer len 128
    log-format             %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %U\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %{+Q}r\ %hr
    acl static_rule path_beg -i /google
    use_backend static_backend if static_rule
    default_backend             servers

#---------------------------------------------------------------------
# backends
#---------------------------------------------------------------------
backend servers
    balance     roundrobin
    
    # Usually we don't need server affinity but there are cases where a user makes a request to a newly updated server
    # which references an asset with a hash that only the new build has; however, the browser's request for that asset
    # might go to the old server if it doesn't re-use an existing socket.
    cookie SERVERID insert indirect nocache
  
    # http://www.haproxy.org/download/1.7/doc/configuration.txt
    # 5.2. Server and default-server options

${cubevar_app_haproxy_servers}
  
    server maintenance 127.0.0.1:81 backup
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-response set-header Strict-Transport-Security max-age=31536000;\ includeSubDomains;\ preload;

backend letsencrypt
    mode http
    server letsencrypt 127.0.0.1:9999

backend static_backend
    server static_server1 127.0.0.1:81
